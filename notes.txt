var name = "AlbERt EINstEiN";

function nameChanger(oldName) {
    var finalName = oldName;
    // Your code goes here!
    var firstName = name.substr(0,name.indexOf(' ')).toLowerCase();
    console.log(firstName);
    var nameArray = [firstName];
    var firstLetter = firstName.charAt(0).toUpperCase();
    //var firstLetter = nameArray.shift();
    var capFirstName = firstLetter + firstName.slice(1);
    console.log(capFirstName);
    //console.log(firstName);
    //console.log(capFirstName);

  // Last name
     var lastName = name.substr(name.indexOf(' ') +1).toUpperCase();
   // var lastName = capFirstName + 2;
    console.log(lastName);
    // var fullName = capFirstName + ' ' + lastName;
    var fullName = capFirstName + ' ' + lastName;
    console.log(fullName);
    //return = fullName;

    // Don't delete this line!
    return finalName;
};

// Did your code work? The line below will tell you!
console.log(nameChanger(name));


//var arr = [];             //new storage
//str = str.split(' ');     //split by spaces
//arr.push(str.shift());    //add the number
//arr.push(str.join(' '));  //and the rest of the string

//arr is now:
//["72","tocirah sneab"];


Solution for Lesson 1 data types:

function nameChanger(oldName) {
    var finalName = oldName;
    var names = oldName.split(" ");
    names[1] = names[1].toUpperCase();
    names[0] = names[0].slice(0,1).toUpperCase() + names[0].slice(1).toLowerCase();
    finalName = names.join(" ");
    return finalName;
}
var names = oldName.split(" ")

Here, we're creating an array of names by breaking the original name at the space. At this point for our original example, names === ["AlbERt", "EINstEiN"]

names[1] = names[1].toUpperCase();

The string.toUpperCase() method does exactly what its name describes. It's acting on names[1], which is "EINstEiN" in the original example. So here, we're reassigning the second element in the names array to the all caps version of "EINSTEIN".

names[0] = names[0].slice(0,1).toUpperCase() + names[0].slice(1).toLowerCase();

This line builds Albert. names[0].slice(0,1).toUpperCase() starts by acting on the first element in the names array, which is "AlbERt" in the example. Then, we grab just the first letter by using .slice(0,1). Then we simply use the .toUpperCase() method again to make sure the first letter is capitalized. Also, notice how we chained two methods together here.

The next part, names[0].slice(1).toLowerCase() acts similarly, except this time we're using .slice(1) to grab the rest of the first string, which is "lbERt" in the example. Then we simply chain the .toLowerCase() method to make sure that the rest of the letters in the first name are lower case. Once we have the first letter capitalized and the rest of the name lower case, we concatenate them together with the +.

finalName = names.join(" ");

array.join([chars]) lets us put array elements together into a single string. Each element will be separated by the optional chars. In this case, we want a space between the two names, so we made the chars a single space, " ". With that, we've joined "Albert" and "Einstein" to form "Albert EINSTEIN"!
